--- 
TableName: "${self:provider.environment.DYNAMODB_TABLE}"
frameworkVersion: ">=1.1.0 <2.0.0"
functions: 
  create: 
    events: 
      - 
        http: 
          cors: true
          method: post
          path: transactions
    handler: transactions/create.create
  delete: 
    events: 
      - 
        http: 
          cors: true
          method: delete
          path: "transactions/{id}"
    handler: transactions/delete.delete
  get: 
    events: 
      - 
        http: 
          cors: true
          method: get
          path: "transactions/{id}"
    handler: "transactions/get.get"
  getTab: 
    events: 
      - 
        http: 
          cors: true
          method: get
          path: "transactions/tab/{year}/{month}"
    handler: transactions/getTab.getTab
  list: 
    events: 
      - 
        http: 
          cors: true
          method: get
          path: transactions
    handler: transactions/list.list
  update: 
    events: 
      - 
        http: 
          cors: true
          method: put
          path: "transactions/{id}"
    handler: transactions/update.update
provider: 
  environment: 
    DYNAMODB_TABLE: "${self:service}-${opt:stage, self:provider.stage}"
  iamRoleStatements: 
    - 
      Action: 
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Effect: Allow
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  name: aws
  runtime: nodejs6.10
resources: 
  Resources: 
    transactionsDynamoDbTable: 
      DeletionPolicy: Retain
      Properties: 
        AttributeDefinitions: 
          - 
            AttributeName: id
            AttributeType: S
        KeySchema: 
          - 
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      Type: "AWS::DynamoDB::Table"
service: transactions
